{"ast":null,"code":"/*\n======================================\n; Title: auth.guard.ts\n; Author: Chris Gorham\n; Date Created: 16 August 2023\n; Last Updated: 17 August 2023\n; Description: This code supports the Auth Guard\n; Sources Used: N/A\n;=====================================\n*/\n// imports\nimport { Router } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nexport const authGuard = (route, state) => {\n  const cookie = inject(CookieService);\n  // if / else statement to let authorized users move on or navigate them back to the sign in page\n  if (cookie.get('session_user')) {\n    console.log('You are logged in and have a valid session cookie');\n    return true;\n  } else {\n    console.log('You must be logged in to access this page');\n    const router = inject(Router);\n    router.navigate(['/security/signin'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n    return false;\n  }\n};","map":{"version":3,"names":["Router","inject","CookieService","authGuard","route","state","cookie","get","console","log","router","navigate","queryParams","returnUrl","url"],"sources":["/Users/chrisgorham/Desktop/buwebdev/nodebucket/src/app/shared/auth.guard.ts"],"sourcesContent":["/*\n======================================\n; Title: auth.guard.ts\n; Author: Chris Gorham\n; Date Created: 16 August 2023\n; Last Updated: 17 August 2023\n; Description: This code supports the Auth Guard\n; Sources Used: N/A\n;=====================================\n*/\n\n// imports\nimport { CanActivateFn, Router } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const cookie = inject(CookieService)\n  \n  // if / else statement to let authorized users move on or navigate them back to the sign in page\n  if (cookie.get('session_user')) {\n    console.log('You are logged in and have a valid session cookie')\n    return true\n  } else {\n    console.log('You must be logged in to access this page')\n    const router = inject(Router)\n    router.navigate(['/security/signin'], {queryParams: {returnUrl: state.url}})\n    return false\n  }\n};\n"],"mappings":"AAAA;;;;;;;;;;AAWA;AACA,SAAwBA,MAAM,QAAQ,iBAAiB;AACvD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,aAAa,QAAQ,oBAAoB;AAGlD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,MAAM,GAAGL,MAAM,CAACC,aAAa,CAAC;EAEpC;EACA,IAAII,MAAM,CAACC,GAAG,CAAC,cAAc,CAAC,EAAE;IAC9BC,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;IAChE,OAAO,IAAI;GACZ,MAAM;IACLD,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IACxD,MAAMC,MAAM,GAAGT,MAAM,CAACD,MAAM,CAAC;IAC7BU,MAAM,CAACC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,EAAE;MAACC,WAAW,EAAE;QAACC,SAAS,EAAER,KAAK,CAACS;MAAG;IAAC,CAAC,CAAC;IAC5E,OAAO,KAAK;;AAEhB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}