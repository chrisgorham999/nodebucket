{"ast":null,"code":"/*\n======================================\n; Title: tasks.component.ts\n; Author: Chris Gorham\n; Date Created: 16 August 2023\n; Last Updated: 23 August 2023\n; Description: This code supports the Task Component\n; Sources Used: N/A\n;=====================================\n*/\nimport { __decorate } from \"tslib\";\n// imports\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let TasksComponent = class TasksComponent {\n  constructor(cookieService, taskService, fb) {\n    this.cookieService = cookieService;\n    this.taskService = taskService;\n    this.fb = fb;\n    // form validators\n    this.newTaskForm = this.fb.group({\n      text: [null, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(50)])],\n      category: [null]\n    });\n    this.employee = {};\n    this.todo = [];\n    this.done = [];\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.empId = parseInt(this.cookieService.get('session_user'), 10);\n    this.taskService.getTask(this.empId).subscribe({\n      next: emp => {\n        console.log('emp', emp);\n        this.employee = emp;\n      },\n      error: err => {\n        console.log('error', err);\n        this.errorMessage = err.message;\n      },\n      complete: () => {\n        console.log('complete');\n        this.todo = this.employee.todo ? this.employee.todo : [];\n        this.done = this.employee.done ? this.employee.done : [];\n        console.log('todo', this.todo);\n        console.log('done', this.done);\n      }\n    });\n  }\n  addTask() {\n    const text = this.newTaskForm.controls['text'].value;\n    const category = this.newTaskForm.controls['category'].value;\n    if (!category) {\n      this.errorMessage = 'Please provide a category';\n      this.hideAlert();\n      return;\n    }\n    let newTask = this.getTask(text, category);\n    this.taskService.addTask(this.empId, newTask).subscribe({\n      next: task => {\n        console.log('Task added with id', task.id);\n        newTask._id = task.id; // set the new task\n        this.todo.push(newTask);\n        this.newTaskForm.reset();\n        this.successMessage = 'Task added successfully';\n        this.hideAlert();\n      },\n      error: err => {\n        this.errorMessage = err.message;\n        this.hideAlert();\n      }\n    });\n  }\n  hideAlert() {\n    setTimeout(() => {\n      this.errorMessage = '';\n      this.successMessage = '';\n    }, 3000);\n  }\n  getTask(text, categoryName) {\n    let task = {};\n    // define colors\n    const white = '#FFFFFF';\n    const green = '#4BCE97';\n    const purple = '#9F8FEF';\n    const red = '#F87462';\n    switch (categoryName) {\n      case 'testing':\n        task = {\n          text: text,\n          category: {\n            categoryName: categoryName,\n            backgroundColor: green\n          }\n        };\n        return task;\n      case 'meetings':\n        task = {\n          text: text,\n          category: {\n            categoryName: categoryName,\n            backgroundColor: red\n          }\n        };\n        return task;\n      case 'projects':\n        task = {\n          text: text,\n          category: {\n            categoryName: categoryName,\n            backgroundColor: purple\n          }\n        };\n        return task;\n      default:\n        task = {\n          text: text,\n          category: {\n            categoryName: categoryName,\n            backgroundColor: white\n          }\n        };\n    }\n  }\n};\nTasksComponent = __decorate([Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})], TasksComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}